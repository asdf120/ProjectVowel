<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!-- 완성-->
	<bean id="targetBean" class="aop1_xml.MessageBeanImpl">
	</bean>

	<!-- 2. advice 빈생성-->
	<bean id="loggingAdvice" class="aop1_xml.LoggingAdvice"></bean>

	<!--3. AOP 환경설정-->
	<aop:config>
		<!--pointcut : 껴들어가는 시점 -->
		<aop:pointcut expression="execution(public * aop1_xml.*.*Hello(..))" id="pointcut"/>
		<!-- advice -->
		<aop:aspect id="aspect" ref="loggingAdvice">
			<!-- id포인트컷이 나오기전에 advice로 지정한 폴더안에잇는 class파일안에
              before라는 method를 나오게하겟다.
               before2라는 method를 나오게하겟다. -->
			<!--<aop:before method="before" pointcut-ref="pointcut"/>-->
			<aop:around method="around" pointcut-ref="pointcut"/>
		</aop:aspect>
	</aop:config>
</beans>
